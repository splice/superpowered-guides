{"version":3,"sources":["static/superpowered/SuperpoweredTrackLoaderWorker.js"],"names":["importScripts","load","url","SuperpoweredGlue","fetch","Superpowered","__uint_max__sp__","Initialize","then","response","arrayBuffer","audiofileArrayBuffer","audiofileInWASMHeap","arrayBufferToWASM","decodedAudio","Decoder","decodeToAudioInMemory","byteLength","moveWASMToArrayBuffer","AudioInMemory","getSize","self","transfer","postMessage","onmessage","message","data"],"mappings":";;;;AAAAA,aAAa,CAAC,uBAAD,CAAb;;SAEeC;;;;;kEAAf,iBAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC6BC,gBAAgB,CAACC,KAAjB,CAAuB,qBAAvB,CAD7B;;AAAA;AACQC,YAAAA,YADR;AAEIF,YAAAA,gBAAgB,CAACG,gBAAjB,GAAoC,GAApC;AACAD,YAAAA,YAAY,CAACE,UAAb;AAHJ;AAAA,mBAKUH,KAAK,CAACF,GAAD,CAAL,CAAWM,IAAX,CAAgB,UAAAC,QAAQ;AAAA,qBAC1BA,QAAQ,CAACC,WAAT,EAD0B;AAAA,aAAxB,EAEJF,IAFI,CAEC,UAAAG,oBAAoB,EAAI;AAC3B;AACA,kBAAIC,mBAAmB,GAAGP,YAAY,CAACQ,iBAAb,CAA+BF,oBAA/B,CAA1B,CAF2B,CAI3B;;AAAA;AACA,kBAAIG,YAAY,GAAGT,YAAY,CAACU,OAAb,CAAqBC,qBAArB,CAA2CJ,mBAA3C,EAAgED,oBAAoB,CAACM,UAArF,CAAnB,CAL2B,CAO3B;;AAAA;AACA,kBAAIP,WAAW,GAAGL,YAAY,CAACa,qBAAb,CAAmCJ,YAAnC,EAAiDT,YAAY,CAACc,aAAb,CAA2BC,OAA3B,CAAmCN,YAAnC,IAAmD,CAApG,CAAlB,CAR2B,CAU3B;;AAAA;AACA,kBAAI,OAAOO,IAAI,CAACC,QAAZ,KAAyB,WAA7B,EAA0CD,IAAI,CAACC,QAAL,CAAcpB,GAAd,EAAmBQ,WAAnB,EAA1C,KACKa,WAAW,CAAC;AAAE,gCAAgBb;AAAlB,eAAD,EAAmC,CAAEA,WAAF,CAAnC,CAAX;AACR,aAfK,CALV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAuBAc,SAAS,GAAG,mBAASC,OAAT,EAAkB;AAC1B,MAAI,OAAOA,OAAO,CAACC,IAAR,CAAazB,IAApB,KAA6B,QAAjC,EAA2CA,IAAI,CAACwB,OAAO,CAACC,IAAR,CAAazB,IAAd,CAAJ;AAC9C,CAFD","file":"SuperpoweredTrackLoaderWorker.08c98cb5.js","sourceRoot":"..","sourcesContent":["importScripts('./SuperpoweredGlue.js');\n\nasync function load(url) {\n    let Superpowered = await SuperpoweredGlue.fetch('./superpowered.wasm');\n    SuperpoweredGlue.__uint_max__sp__ = 255;\n    Superpowered.Initialize();\n\n    await fetch(url).then(response =>\n        response.arrayBuffer()\n    ).then(audiofileArrayBuffer => {\n        // Copy the ArrayBuffer to WebAssembly Linear Memory.\n        let audiofileInWASMHeap = Superpowered.arrayBufferToWASM(audiofileArrayBuffer);\n\n        // Decode the entire file.\n        let decodedAudio = Superpowered.Decoder.decodeToAudioInMemory(audiofileInWASMHeap, audiofileArrayBuffer.byteLength);\n\n        // Copy the pcm audio from the WebAssembly heap into a regular ArrayBuffer that can be transfered.\n        let arrayBuffer = Superpowered.moveWASMToArrayBuffer(decodedAudio, Superpowered.AudioInMemory.getSize(decodedAudio) * 4);\n\n        // Transfer the ArrayBuffer.\n        if (typeof self.transfer !== 'undefined') self.transfer(url, arrayBuffer);\n        else postMessage({ '__transfer__': arrayBuffer, }, [ arrayBuffer ]);\n    });\n}\n\nonmessage = function(message) {\n    if (typeof message.data.load === 'string') load(message.data.load);\n}\n"]}